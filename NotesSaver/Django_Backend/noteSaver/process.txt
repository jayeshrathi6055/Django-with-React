Django initilization ----------------------------------------------------->
django-admin startproject noteSaver

To run server-------------------------------------------->
python manage.py runserver

For making app---------------------------------------------------->
django-admin startapp notes

Write a "hello world" function in notes/views.py ------------------------------->
from django.shortcuts import render
from django.http import HttpResponse

def index(request):
    return HttpResponse("Hello world")

Set path of notes in noteSaver/urls.py------------------------------------>
from django.contrib import admin
from django.urls import path, include

urlpatterns = [
    path('admin/', admin.site.urls),
    path('notes/', include('notes.urls')),
]

Make urls.py in notes and set path ----------------------------->
from django.urls import path
from . import views

urlpatterns = [
    path('', views.index),
]

*******************************Use of admin database and make Models**********************

For making models write in terminal -------------------------------->
python manage.py migrate

Now make models in notes/models.py------------------------------------>
from django.db import models

class Notes(models.Model):
    id = models.AutoField
    title = models.CharField(max_length = 200)
    description = models.CharField(max_length = 200)
    date = models.DateField()

    def __str__(self):
        return self.title

Go to noteServer/settings.py to add a reference to its configuration class in the INSTALLED_APPS---->
INSTALLED_APPS = [
    'notes.apps.NotesConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

Run in terminal for make migrations-------------------------------------->
python manage.py makemigrations notes
python manage.py sqlmigrate notes 0001
python manage.py migrate

Now create an admin user and set username, email and password----------------------------------->
python manage.py createsuperuser

Register your Model in notes/admin.py----------------------------------->
from django.contrib import admin
from django.contrib import admin
from .models import Notes

admin.site.register(Notes)

Visit http://127.0.0.1:8000/admin/ ------------------------------->

**************************Creae and Read operation**************************************

Set end Point in notes/urls.py------------------------------------->
urlpatterns = [
    path('', views.index),
    path('save/', views.save),
    path('showAll/', views.show),
]

Now write function in notes/views.py----------------------------------------------->
from django.http import HttpResponse,JsonResponse
from django.utils import timezone
from .models import Notes
import json

# Create
def save(request):
    body = request.body.decode('utf-8')
    body = json.loads(body)
    new = Notes(title = body['title'], description = body['description'],date = timezone.now())
    new.save()
    obj = {"title":new.title,"description":new.description,"date":new.date,"id":new.id}
    return JsonResponse(obj)

# Read
def show(request):
    arr_of_obj = []
    arr = Notes.objects.all()
    for i in arr:
        o = {"title":i.title,"description":i.description,"date":i.date,"id":i.id}
        arr_of_obj.append(o)

    return JsonResponse(arr_of_obj,safe=False)

# Update By Id
def update(request):
    body = request.body.decode('utf-8')
    body = json.loads(body)
    Notes.objects.filter(id = body['id']).update(title = body['title'], description = body['description'])
    return JsonResponse({"success":True},safe=False)

# Delete By Id
def delete(request):
    body = request.body.decode('utf-8')
    body = json.loads(body)
    Notes.objects.filter(id = body['id']).delete()
    return JsonResponse({"success":True},safe=False)

